Wikipedia says =>

The observer pattern is a software design pattern in which an object, called the subject, maintains a list of its dependents, called observers, and notifies them automatically of any state changes, usually by calling one of their methods.

Real World Example => 

You might be getting email notification of some blog posts that you have subscribed. Why ? because you are a subscriber of that particular blogger. The blog post seekers where they subscribe to some blog posting site and they are notified whenever there is a new blog post.

Notes => 

* It should be possible that one object can notify an open-ended number of other objects.
* Subjects and their registered users (observers) make up a loosely coupled system. They do not need to know each other explicitly. Also, you can add or remove observers at runtime independently.




