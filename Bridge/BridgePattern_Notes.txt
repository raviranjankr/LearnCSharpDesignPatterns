Wikipedia says =>

The bridge pattern is a design pattern used in software engineering that is meant to "decouple an abstraction from its implementation so that the two can vary independently"

Real World Example =>

Let's assume you have a website with different pages and you are supposed to allow the user to change the theme. What would you do? Create multiple copies of each of the pages for each of the themes or would you just create separate theme and load them based on the user's preferences? Bridge pattern allows you to do the second i.e.

Notes : 
* Bridge pattern separate an abstraction (Abstraction) from its implementation (Implementor) by putting them in separate class hierarchies.
*  The client code works with high-level abstractions. It isn’t exposed to the platform details.
* You can create platform-independent classes and apps.